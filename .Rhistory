gwd
getwd()
dir()
install.packages("swirl")
library()
swirl()
librar(swirl)
librar("swirl")
library("swirl")
swirl()
getwd()
cd ..
library(swirl)
swirl()
5+7
x <- 5+7
z
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
print(my_sqrt)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+ c(0,10,100)
z*2+1000
my_div
1:20
info()
main()
library(datasets)
data(iris)
?irirs
?iris
data(iris)
iris
iris[[,"Species"] == "virginica"]
library(datasets)
data(iris)
head(iris)
length(iris)
data(irirs)
data(iris)
iris
length(iris)
nrow(iris)
f <- gl(3,50)
f
x=iris$Sepal.Length
x
tapply(x,f,mean)
apply(iris,2,mean)
apply(iris[,1:4],2,mean)
iris[,1:4]
library(datasets)
data(mtcars)
?mtcars
summary(mtcars)
head(mtcars)
mtcars$cyl
tapply(mtcars$mgp,mtcars$cyl,mean)
tapply(mtcars$mpg,mtcars$cyl,mean)
split(mtcars,mtcars$cyl)
sapply(split(mtcars,mtcars$cyl)),mean)
sapply(split(mtcars$mpg,mtcars$cyl)),mean)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
split(mtcars$mpg,mtcars$cyl)
sapply(split(mtcars$hp,mtcars$cyl),mean)
sapply(split(mtcars$hp,mtcars$cyl),mean)[8]
sapply(split(mtcars$hp,mtcars$cyl),mean)[3]
sapply(split(mtcars$hp,mtcars$cyl),mean)[1]
sapply(split(mtcars$hp,mtcars$cyl),mean)[3] - sapply(split(mtcars$hp,mtcars$cyl),mean)[1]
209.2143-82.63636
abs(209-2143-82.63636)
209.21429-82.63636
setwd("~/Desktop/R Programming/ProgrammingAssignment2")
source("cachematrix.R")
source("cachematrix.R")
makeCacheMatrix
Guess <- function(max) {
secret.number <- sample(1:max, 1)
total.guesses <- 1
finished <- FALSE
message(sprintf("I'm thinking of a number from 1 to %d.", max))
self.list <- list(
get.info = function() {
message(
sprintf(
"You %s guessed the number!",
if (finished) "have already"
else "still haven't"
)
)
message(sprintf("Guess number: %d", total.guesses))
message(sprintf("The number is taken from 1 to %d.", max))
},
get.clues = function(guess) {
if (finished) message("You've already guessed my number!")
else {
if (guess == secret.number) {
message("Congratulations!")
message(sprintf("You got it in %d guesses!", total.guesses))
finished <<- TRUE
} else {
if (secret.number < guess) message("Too high!")
else message("Too low!")
total.guesses <<- total.guesses + 1
}
}
}
)
class(self.list) <- "Guess"
self.list
}
game <- Guss(100)
game <- Guess(100)
class(game)
game$get.info()
game$get.clues(50)
game$get.clues(60)
game$get.clues(70)
game$get.clues(80)
game$get.clues(90)
game$get.clues(85)
game$get.clues(83)
source("vector.R")
source("vector.R")
x = v(1:10)
x = c(1:10)
makvector(x)
makvector()
makevector(x)
makeVector(x)
makeVector(x=c(1:10))
makeVector$get
makeVector$get(x)
a <- makeVector(c(1,2,3,4))
a$get
